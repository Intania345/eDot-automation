{"name": "Create New Company Successfully", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[contains(text(), 'Fill in with the same data from the Company records')]\"}\n  (Session info: chrome=140.0.7339.210); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nStacktrace:\n\tGetHandleVerifier [0x0x126c333+65459]\n\tGetHandleVerifier [0x0x126c374+65524]\n\t(No symbol) [0x0x108d973]\n\t(No symbol) [0x0x10d76e7]\n\t(No symbol) [0x0x10d7a8b]\n\t(No symbol) [0x0x111dea2]\n\t(No symbol) [0x0x10f9e44]\n\t(No symbol) [0x0x111b606]\n\t(No symbol) [0x0x10f9bf6]\n\t(No symbol) [0x0x10cb38e]\n\t(No symbol) [0x0x10cc274]\n\tGetHandleVerifier [0x0x14eeda3+2697763]\n\tGetHandleVerifier [0x0x14e9ec7+2677575]\n\tGetHandleVerifier [0x0x1294194+228884]\n\tGetHandleVerifier [0x0x12849f8+165496]\n\tGetHandleVerifier [0x0x128b18d+192013]\n\tGetHandleVerifier [0x0x12747d8+99416]\n\tGetHandleVerifier [0x0x1274972+99826]\n\tGetHandleVerifier [0x0x125ebea+10346]\n\tBaseThreadInitThunk [0x0x76b1fcc9+25]\n\tRtlGetAppContainerNamedObjectPath [0x0x776982ae+286]\n\tRtlGetAppContainerNamedObjectPath [0x0x7769827e+238]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9841e613828c1e28425da935c3fbf44b\")>\n\n    @allure.title(\"Create New Company Successfully\")\n    def test_create_company(driver):\n        login_page = LoginPage(driver)\n        company_page = CompanyPage(driver)\n    \n        # Login\n        test_login_success(driver)\n    \n        # Create company\n        # variable fake\n        company_name = fake.company()\n        company_email = fake.email()\n        company_phone = fake.phone_number()\n        company_address = fake.address()\n    \n        company_page.go_to_company_page()\n        time.sleep(5)\n        company_page.verify_company_page()\n        company_page.complete_register_company_step1(company_name, company_email, company_phone, company_address)\n        company_page.take_screenshot()\n        company_page.click_next_button()\n        company_page.take_screenshot()\n        company_page.complete_register_company_step2()\n        company_page.take_screenshot()\n        company_page.click_next_button()\n        company_page.take_screenshot()\n>       company_page.complete_register_company_step3()\n\nweb\\tests\\test_create_company.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nweb\\pages\\company_page.py:208: in complete_register_company_step3\n    self.driver.find_element(*self.company_register_step3_branch_fillData_button).click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:926: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000023425DAE490>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...tRtlGetAppContainerNamedObjectPath [0x0x776982ae+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x0x7769827e+238]\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[contains(text(), 'Fill in with the same data from the Company records')]\"}\nE         (Session info: chrome=140.0.7339.210); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x126c333+65459]\nE       \tGetHandleVerifier [0x0x126c374+65524]\nE       \t(No symbol) [0x0x108d973]\nE       \t(No symbol) [0x0x10d76e7]\nE       \t(No symbol) [0x0x10d7a8b]\nE       \t(No symbol) [0x0x111dea2]\nE       \t(No symbol) [0x0x10f9e44]\nE       \t(No symbol) [0x0x111b606]\nE       \t(No symbol) [0x0x10f9bf6]\nE       \t(No symbol) [0x0x10cb38e]\nE       \t(No symbol) [0x0x10cc274]\nE       \tGetHandleVerifier [0x0x14eeda3+2697763]\nE       \tGetHandleVerifier [0x0x14e9ec7+2677575]\nE       \tGetHandleVerifier [0x0x1294194+228884]\nE       \tGetHandleVerifier [0x0x12849f8+165496]\nE       \tGetHandleVerifier [0x0x128b18d+192013]\nE       \tGetHandleVerifier [0x0x12747d8+99416]\nE       \tGetHandleVerifier [0x0x1274972+99826]\nE       \tGetHandleVerifier [0x0x125ebea+10346]\nE       \tBaseThreadInitThunk [0x0x76b1fcc9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x776982ae+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x7769827e+238]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "attachments": [{"name": "screenshot", "source": "a112c18b-f01f-4695-8fc0-f383a74c9aee-attachment.png", "type": "image/png"}, {"name": "screenshot", "source": "b9a72b95-17b7-44c3-952b-6eb420bbd91a-attachment.png", "type": "image/png"}, {"name": "screenshot", "source": "12aafe10-a37a-4634-83dc-d90b165ddbea-attachment.png", "type": "image/png"}, {"name": "screenshot", "source": "e0a1e722-5087-4195-948e-d0ab049d6a04-attachment.png", "type": "image/png"}, {"name": "screenshot", "source": "9d96428a-e5ed-4adc-9e10-25dd585bebe5-attachment.png", "type": "image/png"}, {"name": "stdout", "source": "78466c3b-eeae-41e8-9493-ef83acf3f6fa-attachment.txt", "type": "text/plain"}], "start": 1759373008978, "stop": 1759373099405, "uuid": "6f56d6e9-1712-43d3-89e8-32305694e37c", "historyId": "b8c3f06972281c52bed69918178bc5b7", "testCaseId": "b8c3f06972281c52bed69918178bc5b7", "fullName": "web.tests.test_create_company#test_create_company", "labels": [{"name": "parentSuite", "value": "web.tests"}, {"name": "suite", "value": "test_create_company"}, {"name": "host", "value": "DESKTOP-M9M2I3E"}, {"name": "thread", "value": "12948-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "web.tests.test_create_company"}], "titlePath": ["web", "tests", "test_create_company.py"]}